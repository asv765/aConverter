Варинты проверки:

13. Проверка и заполнение справочника групповых счетчиков (с установкой генератора).
14. Проверка и заполнение справочника поставщиков информации (с установкой генератора).
16. Проверка и заполнение справочника типов договоров.
18. Проверка на уникальность лицевых счетов в таблице ABONENT.DBF.
20. Два одинаковые параметра на одну дату. Вообще дублирующиеся записи.
21. Проверять, что в таблицы Employees существует запись с кодом 1.


21. Разбить CheckCase проверки формата лицевого счета на те, которые обращаются к FDB базе и те,
которые не обращаются.
22. Развить концепцию классов вариантов проверки. Реализовать фильтрацию по классам.
23. Сохранять наборы настроек.


24. Добавить CheckCase на проверку , что на одну и ту же дату не могут быть два значения в CHARS, LCHARS.

25. Создать класс LshetGenerator для генерации лицевых счетов.
26. Создать класс CharsManager для заполнения файла Chars.DBF. Основные функции:
      - зарегистрировать новую характеристику в неком общем списке характеристик;
      - сохранить полученный список характеристик в заданный TableManager (tmdest).
27. Аналогично классу CharsManager создать класс LCharsManager.
28. Аналогично классам CharsManager, LCharsManager создать класс NachoplManager.


По приложению.

1. В вариантах проверки раскрашивать разными оттенками красного те, которые не прошли проверку, и имеют/не имеют признак возможности 
фиксить ошибки.
2. Добавить строку, расшифровывающую, каким именно образом ошибка фиксится.
3. Иметь возможность запускать все фиксы разом (добавить кнопку).
4. При отображении списка CheckCase-ов учитывать поле DependOn.

