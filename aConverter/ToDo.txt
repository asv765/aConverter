По приложению.

1. Реализовать управление вариантами переноса данных из буфера в целевые таблицы. Реализовать класс InnerConvertCase. Реализовать 
перечисление - тип InnerConvertCase и на его основе построить фабричный метод генерации объектов. Иметь возможность вызывать 
методы переноса данных из метода DoConvert классов-наследников ConvertCase. Цель - сделать конвертацию "однопроходной":

   Заполнили буфер -> проверили целостность -> перенесли из буфера в целевые таблицы.

В классе InnerConvertCase какое-то свойство должно предствалять собой скрипт конвертации и в частности - вызов хранимой процедуры.
	
2. Реализовать управления объектами конвертации в целевой базе данных. Уметь отображать состояние, генерировать и удалять объекты.
В том числе - генерировать скрипты добавления, а главное - удаления объектов. Объекты конвертации:
	- таблицы и связанные с ними генераторы, индексы и триггеры;
	- ислючения;
	- хранимые процедуры проверки целостности и переноса данных из буферных таблиц в целевые.
Возможно реализовать какие-то ссылки между CheckCase, InnerConvertCase и объектами конвертации. Учитывать, что объекты 
конвертации могут быть зависимыми. Например, хранимые процедуры зависят от таблиц.

3. Реализовать управление параметрами в целевой базе данных (количество символов в лицевом счете, префикс, сотрудники и т.д.).

4. Создать локальную базу для хранения настроек конвертации.

5. Реализовать механизм анализа источника конвертируемых данных. В качестве источника брать OleDbProvider. С помощью механизма готовить 
комплексное описание конвертируемой базы - таблицы, поля, их взаимосвязь. По описанию готовить документ для согласования с заказчиком.
К описанию неплохо присовокупить алгоритм или запросы, с помощью которых оцениваются некие ключевые показатели (сальдо на начало и 
конец месяца, суммы оплат, начислений, перерасчетов, суммарные значения количественных характеристик и т.п).

6. Реализовать возможность вызова методов проверки целостности данных из методов DoConvert классов ConvertCase.


