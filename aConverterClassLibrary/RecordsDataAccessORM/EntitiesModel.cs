#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by the ContextGenerator.ttinclude code generation file.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Data;
using System.Linq;
using System.Linq.Expressions;
using System.Data.Common;
using System.Collections.Generic;
using Telerik.OpenAccess;
using Telerik.OpenAccess.Metadata;
using Telerik.OpenAccess.Data.Common;
using Telerik.OpenAccess.Metadata.Fluent;
using Telerik.OpenAccess.Metadata.Fluent.Advanced;
using aConverterClassLibrary.RecordsDataAccessORM;

namespace aConverterClassLibrary.RecordsDataAccessORM	
{
	public partial class AbonentConvertationEntitiesModel : OpenAccessContext, IAbonentConvertationEntitiesModelUnitOfWork
	{
		private static string connectionStringName = @"FirebirdConnectionString";
			
		private static BackendConfiguration backend = GetBackendConfiguration();
				
		private static MetadataSource metadataSource = XmlMetadataSource.FromAssemblyResource("EntitiesModel.rlinq");
		
		public AbonentConvertationEntitiesModel()
			:base(connectionStringName, backend, metadataSource)
		{ }
		
		public AbonentConvertationEntitiesModel(string connection)
			:base(connection, backend, metadataSource)
		{ }
		
		public AbonentConvertationEntitiesModel(BackendConfiguration backendConfiguration)
			:base(connectionStringName, backendConfiguration, metadataSource)
		{ }
			
		public AbonentConvertationEntitiesModel(string connection, MetadataSource metadataSource)
			:base(connection, backend, metadataSource)
		{ }
		
		public AbonentConvertationEntitiesModel(string connection, BackendConfiguration backendConfiguration, MetadataSource metadataSource)
			:base(connection, backendConfiguration, metadataSource)
		{ }
			
		public IQueryable<SUPPLNET> SUPPLNETs 
		{
			get
			{
				return this.GetAll<SUPPLNET>();
			}
		}
		
		public IQueryable<PENI> PENIs 
		{
			get
			{
				return this.GetAll<PENI>();
			}
		}
		
		public IQueryable<OPLATA> OPLATAs 
		{
			get
			{
				return this.GetAll<OPLATA>();
			}
		}
		
		public IQueryable<NACHOPL> NACHOPLs 
		{
			get
			{
				return this.GetAll<NACHOPL>();
			}
		}
		
		public IQueryable<NACH> NACHes 
		{
			get
			{
				return this.GetAll<NACH>();
			}
		}
		
		public IQueryable<LCHAR> LCHARs 
		{
			get
			{
				return this.GetAll<LCHAR>();
			}
		}
		
		public IQueryable<HADDCHAR> HADDCHARs 
		{
			get
			{
				return this.GetAll<HADDCHAR>();
			}
		}
		
		public IQueryable<GCOUNTER> GCOUNTERs 
		{
			get
			{
				return this.GetAll<GCOUNTER>();
			}
		}
		
		public IQueryable<EQUIPMENT> EQUIPMENT 
		{
			get
			{
				return this.GetAll<EQUIPMENT>();
			}
		}
		
		public IQueryable<DOGOVOR> DOGOVORs 
		{
			get
			{
				return this.GetAll<DOGOVOR>();
			}
		}
		
		public IQueryable<COUNTER> COUNTERs 
		{
			get
			{
				return this.GetAll<COUNTER>();
			}
		}
		
		public IQueryable<CNTRSIND> CNTRSINDs 
		{
			get
			{
				return this.GetAll<CNTRSIND>();
			}
		}
		
		public IQueryable<CITIZEN> CITIZENs 
		{
			get
			{
				return this.GetAll<CITIZEN>();
			}
		}
		
		public IQueryable<CHARVAL> CHARVALs 
		{
			get
			{
				return this.GetAll<CHARVAL>();
			}
		}
		
		public IQueryable<CHAR> CHARs 
		{
			get
			{
				return this.GetAll<CHAR>();
			}
		}
		
		public IQueryable<ADDDCHAR> ADDDCHARs 
		{
			get
			{
				return this.GetAll<ADDDCHAR>();
			}
		}
		
		public IQueryable<ABONENT> ABONENTs 
		{
			get
			{
				return this.GetAll<ABONENT>();
			}
		}
		
		public static BackendConfiguration GetBackendConfiguration()
		{
			BackendConfiguration backend = new BackendConfiguration();
			backend.Backend = "Firebird";
			backend.ProviderName = "FirebirdSql.Data.FirebirdClient";
		
			CustomizeBackendConfiguration(ref backend);
		
			return backend;
		}
		
		/// <summary>
		/// Allows you to customize the BackendConfiguration of AbonentConvertationEntitiesModel.
		/// </summary>
		/// <param name="config">The BackendConfiguration of AbonentConvertationEntitiesModel.</param>
		static partial void CustomizeBackendConfiguration(ref BackendConfiguration config);
		
	}
	
	public interface IAbonentConvertationEntitiesModelUnitOfWork : IUnitOfWork
	{
		IQueryable<SUPPLNET> SUPPLNETs
		{
			get;
		}
		IQueryable<PENI> PENIs
		{
			get;
		}
		IQueryable<OPLATA> OPLATAs
		{
			get;
		}
		IQueryable<NACHOPL> NACHOPLs
		{
			get;
		}
		IQueryable<NACH> NACHes
		{
			get;
		}
		IQueryable<LCHAR> LCHARs
		{
			get;
		}
		IQueryable<HADDCHAR> HADDCHARs
		{
			get;
		}
		IQueryable<GCOUNTER> GCOUNTERs
		{
			get;
		}
		IQueryable<EQUIPMENT> EQUIPMENT
		{
			get;
		}
		IQueryable<DOGOVOR> DOGOVORs
		{
			get;
		}
		IQueryable<COUNTER> COUNTERs
		{
			get;
		}
		IQueryable<CNTRSIND> CNTRSINDs
		{
			get;
		}
		IQueryable<CITIZEN> CITIZENs
		{
			get;
		}
		IQueryable<CHARVAL> CHARVALs
		{
			get;
		}
		IQueryable<CHAR> CHARs
		{
			get;
		}
		IQueryable<ADDDCHAR> ADDDCHARs
		{
			get;
		}
		IQueryable<ABONENT> ABONENTs
		{
			get;
		}
	}
}
#pragma warning restore 1591
