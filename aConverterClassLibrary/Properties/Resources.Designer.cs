//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace aConverterClassLibrary.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("aConverterClassLibrary.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to CREATE TABLE CNV$ABONENT (
        ///  ID INTEGER NOT NULL,
        ///  LSHET VARCHAR(10),
        ///  HOUSECD INTEGER,
        ///  DISTKOD INTEGER,
        ///  DISTNAME VARCHAR(40),
        ///  RAYONKOD INTEGER,
        ///  RAYONNAME VARCHAR(40),
        ///  TOWNSKOD INTEGER,
        ///  TOWNSNAME VARCHAR(40),
        ///  ULICAKOD INTEGER,
        ///  ULICANAME VARCHAR(40),
        ///  NDOMA VARCHAR(20),
        ///  KORPUS INTEGER,
        ///  KVARTIRA VARCHAR(10),
        ///  KOMNATA INTEGER,
        ///  F VARCHAR(50),
        ///  I VARCHAR(50),
        ///  O VARCHAR(50),
        ///  PRIM_ VARCHAR(250),
        ///  EXTLSHET VARCHAR(20),
        ///  EXTLSHET2 VARCHAR(20),
        ///  PHONENUM VARCHAR [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string CNV_ABONENT {
            get {
                return ResourceManager.GetString("CNV_ABONENT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DROP TRIGGER CNV$ABONENT_BI;
        ///DROP SEQUENCE GEN_CNV$ABONENT_ID;
        ///DROP INDEX CNV$ABONENT_IDX1;
        ///DROP TABLE CNV$ABONENT;
        ///
        ///
        ///.
        /// </summary>
        internal static string CNV_ABONENT_d {
            get {
                return ResourceManager.GetString("CNV_ABONENT_d", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to CREATE TABLE CNV$ADDDCHAR (
        ///    ID INTEGER NOT NULL,
        ///    LSHET VARCHAR(10),
        ///    ADDCHARCD INTEGER,
        ///    &quot;VALUE&quot; VARCHAR(30),
        ///    primary key (ID));
        ///CREATE INDEX CNV$ADDDCHAR_IDX1 ON CNV$ADDDCHAR (LSHET);
        ///CREATE SEQUENCE GEN_CNV$ADDDCHAR_ID;
        ///
        ///SET TERM ^ ;
        ///CREATE TRIGGER CNV$ADDDCHAR_BI FOR CNV$ADDDCHAR
        ///ACTIVE BEFORE INSERT POSITION 0
        ///AS
        ///BEGIN
        ///  IF (NEW.ID IS NULL) THEN
        ///    NEW.ID = GEN_ID(GEN_CNV$ADDDCHAR_ID,1);
        ///END
        ///^
        ///SET TERM ; ^
        ///
        ///.
        /// </summary>
        internal static string CNV_ADDDCHAR {
            get {
                return ResourceManager.GetString("CNV_ADDDCHAR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DROP TRIGGER CNV$ADDDCHAR_BI;
        ///DROP SEQUENCE GEN_CNV$ADDDCHAR_ID;
        ///DROP INDEX CNV$ADDDCHAR_IDX1;
        ///DROP TABLE CNV$ADDDCHAR;
        ///
        ///
        ///.
        /// </summary>
        internal static string CNV_ADDDCHAR_d {
            get {
                return ResourceManager.GetString("CNV_ADDDCHAR_d", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to CREATE TABLE CNV$CHARS (
        ///  ID INTEGER NOT NULL,
        ///  LSHET VARCHAR(10),
        ///  CHARCD INTEGER,
        ///  CHARNAME VARCHAR(50),
        ///  VALUE_ NUMERIC(11,4),
        ///  DATE_ TIMESTAMP,
        ///  PRIMARY KEY (ID)
        ///);
        ///CREATE INDEX CNV$CHARS_IDX1 ON CNV$CHARS (LSHET);
        ///CREATE SEQUENCE GEN_CNV$CHARS_ID;
        ///
        ///SET TERM ^ ;
        ///CREATE TRIGGER CNV$CHARS_BI FOR CNV$CHARS
        ///ACTIVE BEFORE INSERT POSITION 0
        ///AS
        ///BEGIN
        ///  IF (NEW.ID IS NULL) THEN
        ///    NEW.ID = GEN_ID(GEN_CNV$CHARS_ID,1);
        ///END
        ///^
        ///SET TERM ; ^
        ///.
        /// </summary>
        internal static string CNV_CHARS {
            get {
                return ResourceManager.GetString("CNV_CHARS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DROP TRIGGER CNV$CHARS_BI;
        ///DROP SEQUENCE GEN_CNV$CHARS_ID;
        ///DROP INDEX CNV$CHARS_IDX1;
        ///DROP TABLE CNV$CHARS;
        ///
        ///
        ///.
        /// </summary>
        internal static string CNV_CHARS_d {
            get {
                return ResourceManager.GetString("CNV_CHARS_d", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to CREATE TABLE CNV$CHARVALS (
        ///  ID INTEGER NOT NULL,
        ///  ADDCHARCD INTEGER,
        ///  ADDCVALUE INTEGER,
        ///  ADDCNAME varchar(50),
        ///  PRIMARY KEY (ID)
        ///);
        ///CREATE SEQUENCE GEN_CNV$CHARVALS_ID;
        ///
        ///SET TERM ^ ;
        ///CREATE TRIGGER CNV$CHARVALS_BI FOR CNV$CHARVALS
        ///ACTIVE BEFORE INSERT POSITION 0
        ///AS
        ///BEGIN
        ///  IF (NEW.ID IS NULL) THEN
        ///    NEW.ID = GEN_ID(GEN_CNV$CHARVALS_ID,1);
        ///END
        ///^
        ///SET TERM ; ^
        ///.
        /// </summary>
        internal static string CNV_CHARVALS {
            get {
                return ResourceManager.GetString("CNV_CHARVALS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DROP TRIGGER CNV$CHARVALS_BI;
        ///DROP SEQUENCE GEN_CNV$CHARVALS_ID;
        ///DROP TABLE CNV$CHARVALS;
        ///
        ///
        ///.
        /// </summary>
        internal static string CNV_CHARVALS_d {
            get {
                return ResourceManager.GetString("CNV_CHARVALS_d", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to CREATE TABLE CNV$CITIZENS (
        ///  ID INTEGER NOT NULL,
        ///  LSHET varchar(10),
        ///  CITIZENID INTEGER,
        ///  F varchar(50),
        ///  I varchar(50),
        ///  O varchar(50),
        ///  BIRTHDATE timestamp,
        ///  STARTDATE timestamp,
        ///  ENDDATE timestamp,
        ///  LGOTA INTEGER,
        ///  LGOTANAME varchar(100),
        ///  DATWP timestamp,
        ///  DATUP timestamp,
        ///  DOCUMENTNAME varchar(50),
        ///  SERIA varchar(20),
        ///  NOMER varchar(50),
        ///  DATDN timestamp,
        ///  DORGNAME varchar(50),
        ///  KOLLG INTEGER,
        ///  HOZ INTEGER,
        ///  BIRTHPLACE varchar(50),
        ///  SOB INTEGER,
        ///  DOLYA NUM [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string CNV_CITIZENS {
            get {
                return ResourceManager.GetString("CNV_CITIZENS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DROP TRIGGER CNV$CITIZENS_BI;
        ///DROP SEQUENCE GEN_CNV$CITIZENS_ID;
        ///DROP INDEX CNV$CITIZENS_IDX1;
        ///DROP TABLE CNV$CITIZENS;
        ///
        ///
        ///.
        /// </summary>
        internal static string CNV_CITIZENS_d {
            get {
                return ResourceManager.GetString("CNV_CITIZENS_d", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to CREATE TABLE CNV$CNTRSIND (
        ///  ID INTEGER NOT NULL,
        ///  COUNTERID varchar(20),
        ///  DOCUMENTCD varchar(20),
        ///  OLDIND NUMERIC(16,4),
        ///  OB_EM NUMERIC(16,4),
        ///  INDICATION NUMERIC(16,4),
        ///  INDDATE TIMESTAMP,
        ///  INDTYPE INTEGER,
        ///  PRIMARY KEY (ID)
        ///);
        ///CREATE SEQUENCE GEN_CNV$CNTRSIND_ID;
        ///
        ///SET TERM ^ ;
        ///CREATE TRIGGER CNV$CNTRSIND_BI FOR CNV$CNTRSIND
        ///ACTIVE BEFORE INSERT POSITION 0
        ///AS
        ///BEGIN
        ///  IF (NEW.ID IS NULL) THEN
        ///    NEW.ID = GEN_ID(GEN_CNV$CNTRSIND_ID,1);
        ///END
        ///^
        ///SET TERM ; ^
        ///.
        /// </summary>
        internal static string CNV_CNTRSIND {
            get {
                return ResourceManager.GetString("CNV_CNTRSIND", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DROP TRIGGER CNV$CNTRSIND_BI;
        ///DROP SEQUENCE GEN_CNV$CNTRSIND_ID;
        ///DROP INDEX CNV$CNTRSIND_IDX1;
        ///DROP TABLE CNV$CNTRSIND;
        ///
        ///
        ///.
        /// </summary>
        internal static string CNV_CNTRSIND_d {
            get {
                return ResourceManager.GetString("CNV_CNTRSIND_d", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to CREATE TABLE CNV$COUNTERS (
        ///  ID INTEGER NOT NULL,
        ///  COUNTERID varchar(20),
        ///  LSHET varchar(10),
        ///  CNTTYPE INTEGER,
        ///  CNTNAME varchar(50),
        ///  SETUPDATE timestamp,
        ///  SERIALNUM varchar(30),
        ///  SETUPPLACE INTEGER,
        ///  PLACE varchar(20),
        ///  PLOMBDATE timestamp,
        ///  PLOMBNAME varchar(40),
        ///  LASTPOV timestamp,
        ///  NEXTPOV timestamp,
        ///  PRIM_ varchar(100),
        ///  DEACTDATE timestamp,
        ///  TAG varchar(30),
        ///  NAME varchar(30),
        ///  PRIMARY KEY (ID)
        ///);
        ///CREATE INDEX CNV$COUNTERS_IDX1 ON CNV$COUNTERS (LSHET);
        ///CREATE SE [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string CNV_COUNTERS {
            get {
                return ResourceManager.GetString("CNV_COUNTERS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DROP TRIGGER CNV$COUNTERS_BI;
        ///DROP SEQUENCE GEN_CNV$COUNTERS_ID;
        ///DROP INDEX CNV$COUNTERS_IDX1;
        ///DROP TABLE CNV$COUNTERS;
        ///
        ///
        ///.
        /// </summary>
        internal static string CNV_COUNTERS_d {
            get {
                return ResourceManager.GetString("CNV_COUNTERS_d", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to CREATE TABLE CNV$DOGOVOR (
        ///  ID INTEGER NOT NULL,
        ///  LSHET varchar(10),
        ///  DOGTYPEKOD INTEGER,
        ///  DOGTYPENAM varchar(50),
        ///  DESCRIPTIO varchar(100),
        ///  STARTDATE timestamp,
        ///  ENDDATE timestamp,
        ///  SERIA varchar(12),
        ///  NOMER varchar(12),
        ///  PRIMARY KEY (ID)
        ///);
        ///CREATE INDEX CNV$DOGOVOR_IDX1 ON CNV$DOGOVOR (LSHET);
        ///CREATE SEQUENCE GEN_CNV$DOGOVOR_ID;
        ///
        ///SET TERM ^ ;
        ///CREATE TRIGGER CNV$DOGOVOR_BI FOR CNV$DOGOVOR
        ///ACTIVE BEFORE INSERT POSITION 0
        ///AS
        ///BEGIN
        ///  IF (NEW.ID IS NULL) THEN
        ///    NEW.ID = GEN_ID [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string CNV_DOGOVOR {
            get {
                return ResourceManager.GetString("CNV_DOGOVOR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DROP TRIGGER CNV$DOGOVOR_BI;
        ///DROP SEQUENCE GEN_CNV$DOGOVOR_ID;
        ///DROP INDEX CNV$DOGOVOR_IDX1;
        ///DROP TABLE CNV$DOGOVOR;
        ///
        ///
        ///.
        /// </summary>
        internal static string CNV_DOGOVOR_d {
            get {
                return ResourceManager.GetString("CNV_DOGOVOR_d", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to CREATE TABLE CNV$EQUIPMENT (
        ///  ID INTEGER NOT NULL,
        ///  LSHET varchar(10),
        ///  GROUPKOD INTEGER,
        ///  GROUPNAME varchar(50),
        ///  MARKKOD INTEGER,
        ///  MARKNAME varchar(50),
        ///  SETUPDATE timestamp,
        ///  SERIALNUM varchar(30),
        ///  PRIMARY KEY (ID)
        ///);
        ///CREATE INDEX CNV$EQUIPMENT_IDX1 ON CNV$EQUIPMENT (LSHET);
        ///CREATE SEQUENCE GEN_CNV$EQUIPMENT_ID;
        ///
        ///SET TERM ^ ;
        ///CREATE TRIGGER CNV$EQUIPMENT_BI FOR CNV$EQUIPMENT
        ///ACTIVE BEFORE INSERT POSITION 0
        ///AS
        ///BEGIN
        ///  IF (NEW.ID IS NULL) THEN
        ///    NEW.ID = GEN_ID(GEN_CNV$EQUIP [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string CNV_EQUIPMENT {
            get {
                return ResourceManager.GetString("CNV_EQUIPMENT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DROP TRIGGER CNV$EQUIPMENT_BI;
        ///DROP SEQUENCE GEN_CNV$EQUIPMENT_ID;
        ///DROP INDEX CNV$EQUIPMENT_IDX1;
        ///DROP TABLE CNV$EQUIPMENT;
        ///
        ///
        ///.
        /// </summary>
        internal static string CNV_EQUIPMENT_d {
            get {
                return ResourceManager.GetString("CNV_EQUIPMENT_d", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to CREATE TABLE CNV$GCOUNTER (
        ///  ID INTEGER NOT NULL,
        ///  COUNTERID varchar(20),
        ///  LSHET varchar(10),
        ///  PRIMARY KEY (ID)
        ///);
        ///CREATE INDEX CNV$GCOUNTER_IDX1 ON CNV$GCOUNTER (LSHET);
        ///CREATE SEQUENCE GEN_CNV$GCOUNTER_ID;
        ///
        ///SET TERM ^ ;
        ///CREATE TRIGGER CNV$GCOUNTER_BI FOR CNV$GCOUNTER
        ///ACTIVE BEFORE INSERT POSITION 0
        ///AS
        ///BEGIN
        ///  IF (NEW.ID IS NULL) THEN
        ///    NEW.ID = GEN_ID(GEN_CNV$GCOUNTER_ID,1);
        ///END
        ///^
        ///SET TERM ; ^
        ///.
        /// </summary>
        internal static string CNV_GCOUNTER {
            get {
                return ResourceManager.GetString("CNV_GCOUNTER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DROP TRIGGER CNV$GCOUNTER_BI;
        ///DROP SEQUENCE GEN_CNV$GCOUNTER_ID;
        ///DROP INDEX CNV$GCOUNTER_IDX1;
        ///DROP TABLE CNV$GCOUNTER;
        ///
        ///
        ///.
        /// </summary>
        internal static string CNV_GCOUNTER_d {
            get {
                return ResourceManager.GetString("CNV_GCOUNTER_d", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to CREATE TABLE CNV$HADDCHAR (
        ///  ID INTEGER NOT NULL,
        ///  HOUSECD INTEGER,
        ///  ADDCHARCD INTEGER,
        ///  VALUE_ varchar(30),
        ///  PRIMARY KEY (ID)
        ///);
        ///CREATE SEQUENCE GEN_CNV$HADDCHAR_ID;
        ///
        ///SET TERM ^ ;
        ///CREATE TRIGGER CNV$HADDCHAR_BI FOR CNV$HADDCHAR
        ///ACTIVE BEFORE INSERT POSITION 0
        ///AS
        ///BEGIN
        ///  IF (NEW.ID IS NULL) THEN
        ///    NEW.ID = GEN_ID(GEN_CNV$HADDCHAR_ID,1);
        ///END
        ///^
        ///SET TERM ; ^
        ///.
        /// </summary>
        internal static string CNV_HADDCHAR {
            get {
                return ResourceManager.GetString("CNV_HADDCHAR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DROP TRIGGER CNV$HADDCHAR_BI;
        ///DROP SEQUENCE GEN_CNV$HADDCHAR_ID;
        ///DROP TABLE CNV$HADDCHAR;
        ///
        ///
        ///.
        /// </summary>
        internal static string CNV_HADDCHAR_d {
            get {
                return ResourceManager.GetString("CNV_HADDCHAR_d", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to CREATE TABLE CNV$LCHARS (
        ///  ID INTEGER NOT NULL,
        ///  LSHET varchar(10),
        ///  LCHARCD INTEGER,
        ///  LCHARNAME varchar(100),
        ///  VALUE_ INTEGER,
        ///  VALUEDESC varchar(100),
        ///  DATE_ TIMESTAMP,
        ///  PRIMARY KEY (ID)
        ///);
        ///CREATE INDEX CNV$LCHARS_IDX1 ON CNV$LCHARS (LSHET);
        ///CREATE SEQUENCE GEN_CNV$LCHARS_ID;
        ///
        ///SET TERM ^ ;
        ///CREATE TRIGGER CNV$LCHARS_BI FOR CNV$LCHARS
        ///ACTIVE BEFORE INSERT POSITION 0
        ///AS
        ///BEGIN
        ///  IF (NEW.ID IS NULL) THEN
        ///    NEW.ID = GEN_ID(GEN_CNV$LCHARS_ID,1);
        ///END
        ///^
        ///SET TERM ; ^
        ///.
        /// </summary>
        internal static string CNV_LCHARS {
            get {
                return ResourceManager.GetString("CNV_LCHARS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DROP TRIGGER CNV$LCHARS_BI;
        ///DROP SEQUENCE GEN_CNV$LCHARS_ID;
        ///DROP INDEX CNV$LCHARS_IDX1;
        ///DROP TABLE CNV$LCHARS;
        ///
        ///
        ///.
        /// </summary>
        internal static string CNV_LCHARS_d {
            get {
                return ResourceManager.GetString("CNV_LCHARS_d", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to CREATE TABLE CNV$NACH (
        ///  ID INTEGER NOT NULL,
        ///  LSHET varchar(10) NOT NULL,
        ///  DOCUMENTCD varchar(20) NOT NULL,
        ///  MONTH INTEGER NOT NULL,
        ///  YEAR INTEGER NOT NULL,
        ///  MONTH2 INTEGER NOT NULL,
        ///  YEAR2 INTEGER NOT NULL,
        ///  FNATH decimal(20,4) NOT NULL,
        ///  PROCHL decimal(20,4) NOT NULL,
        ///  VOLUME decimal(20,4) NOT NULL,
        ///  REGIMCD INTEGER NOT NULL,
        ///  REGIMNAME varchar(50) NOT NULL,
        ///  SERVICECD INTEGER NOT NULL,
        ///  SERVICENAM varchar(50) NOT NULL,
        ///  DATE_VV timestamp NOT NULL,
        ///  TYPE_ INTEGER NOT NULL, [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string CNV_NACH {
            get {
                return ResourceManager.GetString("CNV_NACH", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DROP TRIGGER CNV$NACH_BI;
        ///DROP SEQUENCE GEN_CNV$NACH_ID;
        ///DROP INDEX CNV$NACH_IDX1;
        ///DROP TABLE CNV$NACH;
        ///
        ///
        ///.
        /// </summary>
        internal static string CNV_NACH_d {
            get {
                return ResourceManager.GetString("CNV_NACH_d", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to CREATE TABLE CNV$NACHOPL (
        ///  ID INTEGER NOT NULL,
        ///  LSHET varchar(10) NOT NULL,
        ///  MONTH INTEGER NOT NULL,
        ///  YEAR INTEGER NOT NULL,
        ///  MONTH2 INTEGER NOT NULL,
        ///  YEAR2 INTEGER NOT NULL,
        ///  BDEBET NUMERIC(20,4) NOT NULL,
        ///  FNATH NUMERIC(20,4) NOT NULL,
        ///  PROCHL NUMERIC(20,4) NOT NULL,
        ///  OPLATA NUMERIC(20,2) NOT NULL,
        ///  EDEBET NUMERIC(20,4) NOT NULL,
        ///  SERVICECD INTEGER NOT NULL,
        ///  SERVICENAM varchar(50) NOT NULL,
        ///  PRIMARY KEY (ID)
        ///);
        ///CREATE SEQUENCE GEN_CNV$NACHOPL_ID;
        ///
        ///SET TERM ^ ;
        ///CREATE T [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string CNV_NACHOPL {
            get {
                return ResourceManager.GetString("CNV_NACHOPL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DROP TRIGGER CNV$NACHOPL_BI;
        ///DROP SEQUENCE GEN_CNV$NACHOPL_ID;
        ///DROP INDEX CNV$NACHOPL_IDX1;
        ///DROP TABLE CNV$NACHOPL;
        ///
        ///
        ///.
        /// </summary>
        internal static string CNV_NACHOPL_d {
            get {
                return ResourceManager.GetString("CNV_NACHOPL_d", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to CREATE TABLE CNV$OPLATA (
        ///  ID INTEGER NOT NULL AUTO_INCREMENT,
        ///  LSHET varchar(10) NOT NULL,
        ///  DOCUMENTCD varchar(20) NOT NULL,
        ///  MONTH INTEGER NOT NULL,
        ///  YEAR INTEGER NOT NULL,
        ///  SUMMA NUMERIC(20,2) NOT NULL,
        ///  DATE_ timestamp NOT NULL,
        ///  DATE_VV timestamp NOT NULL,
        ///  DATETIND timestamp DEFAULT NULL,
        ///  SOURCECD INTEGER NOT NULL,
        ///  SOURCENAME varchar(50) NOT NULL,
        ///  SERVICECD INTEGER NOT NULL,
        ///  SERVICENAM varchar(50) NOT NULL,
        ///  PRIM_ varchar(100) DEFAULT NULL,
        ///  PRIMARY KEY (ID)
        ///);
        ///CREA [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string CNV_OPLATA {
            get {
                return ResourceManager.GetString("CNV_OPLATA", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DROP TRIGGER CNV$OPLATA_BI;
        ///DROP SEQUENCE GEN_CNV$OPLATA_ID;
        ///DROP INDEX CNV$OPLATA_IDX1;
        ///DROP TABLE CNV$OPLATA;
        ///
        ///
        ///.
        /// </summary>
        internal static string CNV_OPLATA_d {
            get {
                return ResourceManager.GetString("CNV_OPLATA_d", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to CREATE TABLE CNV$PENI (
        ///  LSHET VARCHAR(10) NOT NULL COMMENT &apos;Лицевой счет&apos;,
        ///  SERVICECD INT(11) NOT NULL,
        ///  DOLGDATE TIMESTAMP NOT NULL,
        ///  DOLG NUMERIC(20,4) NOT NULL
        ///);
        ///CREATE SEQUENCE GEN_CNV$PENI_ID;
        ///
        ///SET TERM ^ ;
        ///CREATE TRIGGER CNV$PENI_BI FOR CNV$PENI
        ///ACTIVE BEFORE INSERT POSITION 0
        ///AS
        ///BEGIN
        ///  IF (NEW.ID IS NULL) THEN
        ///    NEW.ID = GEN_ID(GEN_CNV$PENI_ID,1);
        ///END
        ///^
        ///SET TERM ; ^
        ///.
        /// </summary>
        internal static string CNV_PENI {
            get {
                return ResourceManager.GetString("CNV_PENI", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DROP TRIGGER CNV$PENI_BI;
        ///DROP SEQUENCE GEN_CNV$PENI_ID;
        ///DROP INDEX CNV$PENI_IDX1;
        ///DROP TABLE CNV$PENI;
        ///
        ///
        ///.
        /// </summary>
        internal static string CNV_PENI_d {
            get {
                return ResourceManager.GetString("CNV_PENI_d", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to CREATE TABLE CNV$SUPPLNET (
        ///  ID INTEGER NOT NULL,
        ///  LSHET varchar(10) DEFAULT NULL,
        ///  SERVICECD INTEGER DEFAULT NULL,
        ///  KNOTL1CD INTEGER DEFAULT NULL,
        ///  KNOTL1NAME varchar(100) DEFAULT NULL,
        ///  KNOTL2CD INTEGER DEFAULT NULL,
        ///  KNOTL2NAME varchar(100) DEFAULT NULL,
        ///  SUPPDATE timestamp DEFAULT NULL,
        ///  CONNECTED SMALLINT DEFAULT NULL,
        ///  PRIMARY KEY (ID)
        ///);
        ///CREATE SEQUENCE GEN_CNV$SUPPLNET_ID;
        ///
        ///SET TERM ^ ;
        ///CREATE TRIGGER CNV$SUPPLNET_BI FOR CNV$SUPPLNET
        ///ACTIVE BEFORE INSERT POSITION 0
        ///AS
        ///BEG [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string CNV_SUPPLNET {
            get {
                return ResourceManager.GetString("CNV_SUPPLNET", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DROP TRIGGER CNV$SUPPLNET_BI;
        ///DROP SEQUENCE GEN_CNV$SUPPLNET_ID;
        ///DROP INDEX CNV$SUPPLNET_IDX1;
        ///DROP TABLE CNV$SUPPLNET;
        ///
        ///
        ///.
        /// </summary>
        internal static string CNV_SUPPLNET_d {
            get {
                return ResourceManager.GetString("CNV_SUPPLNET_d", resourceCulture);
            }
        }
    }
}
